{"version":3,"sources":["eth.png","ResultsTable.js","ConnectedResultsTable.js","NewResultsForm.js","ResultsTable2.js","RankedCurrenciesTable.js","LogoBox.js","TextBox.js","Slider.js","App.js","reportWebVitals.js","index.js"],"names":["ResultsTable","rows","results","map","result","index","color","Table","Row","Cell","Label","ribbon","tokenorpair","pool","amount","percentageofportfolio","roi_estimate","risk_setting","className","Segment","striped","Header","HeaderCell","Body","socket","Pusher","cluster","encrypted","ConnectedResultsTable","state","subscribe","bind","data","setState","fetch","then","response","json","this","React","Component","NewResultsForm","token","onChangeName","_onChangeName","onChangeTime","_onChangeTime","onSubmit","_onSubmit","vertical","Form","class","Field","placeholder","value","onChange","Button","type","e","target","payload","parseFloat","method","headers","body","JSON","stringify","ResultsTable2","currencyoutputtable","backend_pair","backend_poolsize","backend_volume","backend_yield","pool_source","volatility","ROIestimate","ConnectedResultsTable2","LogoBox","src","logo","width","ReactDOM","render","document","getElementById","createElement","TextBox","sliderThumbStyles","props","opacity","Styles","styled","div","Slider2","handleOnChange","min","max","App","align","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.85809605.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eth.61b680ab.png\";","import React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react'\nexport default function ResultsTable({results}) {\n    const rows = results.map(((result, index) => {\n        let color;\n        if (index === 0) {\n            color='yellow';\n        } else if (index === 1) {\n            color='grey';\n        } else if (index === 2) {\n            color='orange';\n        }\n        return (\n            <Table.Row key={ index }>\n                <Table.Cell>\n                    <Label ribbon color={color}>{ index + 1 }</Label>\n                </Table.Cell>\n                <Table.Cell>{ result.tokenorpair }</Table.Cell>\n                <Table.Cell>{ result.pool}</Table.Cell>\n                <Table.Cell>{ result.amount }</Table.Cell>\n                <Table.Cell>{ result.percentageofportfolio }</Table.Cell>\n                <Table.Cell>{ result.roi_estimate }</Table.Cell>\n                <Table.Cell>{ result.risk_setting }</Table.Cell>\n            </Table.Row>\n        );\n    }));\n    return (\n        <div className=\"ui container\">\n            <Segment>\n\n                <Table striped>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Ranking</Table.HeaderCell>\n                            <Table.HeaderCell>Token/Pair</Table.HeaderCell>\n                            <Table.HeaderCell>Pool</Table.HeaderCell>\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\n                            <Table.HeaderCell>% Portfolio</Table.HeaderCell>\n                            <Table.HeaderCell>ROI Estimate</Table.HeaderCell>\n                            <Table.HeaderCell>Risk setting</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        { rows }\n                    </Table.Body>\n                </Table>\n            </Segment>\n        </div>\n    );\n}\n\n//                 <Header>Optimal Portfolio</Header>","import React from 'react';\nimport ResultsTable from './ResultsTable';\nimport Pusher from 'pusher-js';\n//import 'semantic-ui-css/semantic.js';\nconst socket = new Pusher('7885860875bb513c3e34', {\n    cluster: 'eu',\n    encrypted: true\n});\n\nexport default class ConnectedResultsTable extends React.Component {\n    state = {\n        results: []\n    };\n    componentDidMount() {\n        const channel = socket.subscribe('results');\n        channel.bind('results', (data) => {\n            this.setState(data);\n        });\n\n\n        // change this url:\n\n        fetch('http://localhost:8080/results')\n            .then((response) => response.json())\n            .then((response) => this.setState(response));\n    }\n    render() {\n        return <ResultsTable results={this.state.results} />;\n    }\n}","import React from 'react';\nimport { Form, Header, Segment, Button } from 'semantic-ui-react'\n\n\n// does not do any validation\nexport default class NewResultsForm extends React.Component {\n    state = {\n        token: '',\n        amount: '',\n//        pool_sz: ''\n    };\n    onChangeName = this._onChangeName.bind(this);\n    onChangeTime = this._onChangeTime.bind(this);\n  //  onChangePool_sz = this._onChangePool_sz.bind(this);\n    onSubmit = this._onSubmit.bind(this);\n    render() {\n        return (\n            <div className=\"ui container\">\n                <Segment vertical>\n                    <Header>Please Enter Your Cryptocurrency Portfolio and we will suggest how to maximize its yield:</Header>\n                    <Form onSubmit={this.onSubmit}>\n\n                        <div class=\"mainDIV\">\n                            <div class=\"leftDIV\">\n                                <Form.Field>\n                                    <label>Token</label>\n                                    <input placeholder='ETH' value={this.state.token} onChange={this.onChangeName} />\n                                </Form.Field>\n                            </div>\n                            <div class=\"middleDIV\">\n                                <Form.Field>\n                                    <label>Amount</label>\n                                    <input placeholder='Amount' value={this.state.amount} onChange={this.onChangeTime} />\n                                </Form.Field>\n                            </div>\n                            <div class=\"rightDIV\">\n                                <Form.Field>\n                                    <label> Add </label>\n                                    <Button type='submit'>Submit</Button>\n                                </Form.Field>\n                            </div> \n                        </div>\n                    </Form>\n                </Segment>\n            </div>\n        );\n    }\n    _onChangeName(e) {\n        this.setState({\n            token: e.target.value\n        });\n    }\n    _onChangeTime(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n/*    _onChangePool_sz(e) {\n        this.setState({\n            pool_sz: e.target.value\n        });\n    }*/\n    _onSubmit() {\n        const payload = {\n            token: this.state.token,\n            amount: parseFloat(this.state.amount),\n           // pool_sz: parseFloat(this.state.pool_sz)\n        };\n        fetch('http://localhost:8080/results', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        });\n        this.setState({\n            token: '',\n            amount: '',\n        //    pool_sz: ''\n        });\n    }\n}\n\n/*\n                        <Form.Field>\n                            <label>Pool Size</label>\n                            <input placeholder='Pool Size' value={this.state.pool_sz} onChange={this.onChangePool_sz} />\n                        </Form.Field>\n*/","import React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react'\n\nexport default function ResultsTable2({currencyoutputtable}) {\n    const rows = currencyoutputtable.map(((result, index) => {\n        let color = 'blue';\n\n        return (\n            <Table.Row key={ index }>\n                <Table.Cell>\n                    <Label ribbon color={color}>{ index + 1 }</Label>\n                </Table.Cell>\n                <Table.Cell>{ result.backend_pair }</Table.Cell>\n                <Table.Cell>{ result.backend_poolsize }</Table.Cell>\n                <Table.Cell>{ result.backend_volume }</Table.Cell>\n                <Table.Cell>{ result.backend_yield }</Table.Cell>\n                <Table.Cell>{ result.pool_source }</Table.Cell>\n                <Table.Cell>{ result.volatility }</Table.Cell>\n                <Table.Cell>{ result.ROIestimate }</Table.Cell>\n            </Table.Row>\n        );\n    }));\n    return (\n        <div className=\"ui container\">\n            <Segment>\n\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Ranking</Table.HeaderCell>\n                            <Table.HeaderCell>Currency Pair</Table.HeaderCell>\n                            <Table.HeaderCell>Pool Size</Table.HeaderCell>\n                            <Table.HeaderCell>Pool Trading Volume</Table.HeaderCell>\n                            <Table.HeaderCell>Interest Rate</Table.HeaderCell>\n                            <Table.HeaderCell>Pool</Table.HeaderCell>\n                            <Table.HeaderCell>Historical Volatility</Table.HeaderCell>\n                            <Table.HeaderCell>ROI Estimate</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        { rows }\n                    </Table.Body>\n                </Table>\n            </Segment>\n        </div>\n    );\n}\n\n\n       /*\n        if (index === 0) {\n            color='blue';\n        } else if (index === 1) {\n            color='blue';\n        } else if (index === 2) {\n            color='blue';\n        }\n\n             <Table.Cell>{ result.max_amount }</Table.Cell>\n                <Table.Cell>{ result.raw_yield }</Table.Cell>\n                <Table.Cell>{ result.normalized_yield }</Table.Cell>\n\n        */","import React from 'react';\nimport ResultsTable2 from './ResultsTable2';\nimport Pusher from 'pusher-js';\n\nconst socket = new Pusher('7885860875bb513c3e34', {\n    cluster: 'eu',\n    encrypted: true\n});\n\nexport default class ConnectedResultsTable2 extends React.Component {\n    state = {\n        currencyoutputtable: []\n    };\n    componentDidMount() {\n        const channel = socket.subscribe('currencyoutputtable');\n        channel.bind('currencyoutputtable', (data) => {\n            this.setState(data);\n        });\n\n        // change this url:\n\n        fetch('http://localhost:8080/currencyoutputtable')\n            .then((response) => response.json())\n            .then((response) => this.setState(response));\n    }\n    render() {\n        return <ResultsTable2 currencyoutputtable={this.state.currencyoutputtable} />;\n    }\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport logo from './eth.png';\r\n\r\nclass LogoBox extends React.Component {\r\n    render() {\r\n      return <div className=\"Applogo\"> <img src={logo} width=\"2%\"/> </div>;\r\n    }\r\n  }\r\n\r\n  ReactDOM.render(<LogoBox />, document.getElementById('root') || document.createElement('div'));\r\n  export default LogoBox;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass TextBox extends React.Component {\r\n    render() {\r\n      return <div className=\"HeaderBox\"> Welcome to High Yield 4 Me! </div>;\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(<TextBox />, document.getElementById('root') || document.createElement('div'))\r\n  export default TextBox;","import React from 'react';\r\nimport { Form, Header, Segment, Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components';\r\n\r\n/*\r\nconst sliderThumbStyles = (props) => (`\r\n  width: 25px;\r\n  height: 25px;\r\n  background: ${props.color};\r\n  cursor: pointer;\r\n  outline: 5px solid #333;\r\n  opacity: ${props.opacity};\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n`);\r\n\r\nconst Styles = styled.div`\r\n  display: flex;\r\n  color: #888;\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  .value {\r\n    flex: 1;\r\n    font-size: 2rem;\r\n  }\r\n  .slider {\r\n    flex: 6;\r\n    -webkit-appearance: none;\r\n    width: 50%;\r\n    height: 10px;\r\n    border-radius: 5px;\r\n    background: #efefef;  \r\n    outline: none;\r\n    &::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      appearance: none;\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n    &::-moz-range-thumb {\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n  }\r\n`;*/\r\n\r\nconst sliderThumbStyles = (props) => (`\r\n  width: 15px;\r\n  height: 15px;\r\n  background: ${props.color};\r\n  cursor: pointer;\r\n  outline: 5px solid #333;\r\n  opacity: ${props.opacity};\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n`);\r\n\r\nconst Styles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #888;\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 2rem;\r\n  .value {\r\n    flex: 1;\r\n    font-size: 2rem;\r\n  }\r\n  .slider {\r\n    flex: 6;\r\n    -webkit-appearance: none;\r\n    width: 75%; \r\n    margin-right: 15px;\r\n    height: 8px;\r\n    border-radius: 10px;\r\n    background: #efefef;\r\n    outline: 1px ridge rgba(128,128,128);\r\n    &::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      appearance: none;\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n    &::-moz-range-thumb {\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Slider2 extends React.Component {\r\n    state = {\r\n        risk_setting: ''\r\n    };\r\n        \r\n  handleOnChange = (e) => this.setState({ risk_setting: e.target.value });\r\n \r\n    onSubmit = this._onSubmit.bind(this);\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n              <Form onSubmit={this.onSubmit}>\r\n              <Header>Please enter your risk tolerance (1 to 10):</Header>\r\n                  <Styles opacity={this.state.risk_setting > 10 ? (this.state.risk_setting / 10) : .1} color={this.props.color}>\r\n                    <input type=\"range\" min={0} max={10} value={this.state.risk_setting} className=\"slider\" onChange={this.handleOnChange}/> \r\n                    <Button type='submit'>Submit</Button>                 \r\n                  </Styles>                \r\n\r\n              </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _onSubmit() {\r\n        const payload = {\r\n            risk_setting: parseFloat(this.state.risk_setting)\r\n        };\r\n        fetch('http://localhost:8080/results2', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        });\r\n        this.setState({\r\n          risk_setting: ''\r\n        });\r\n    }\r\n}","import logo from './eth.png';\r\n\r\nimport React, { Component } from 'react';\r\nimport ConnectedResultsTable from './ConnectedResultsTable';\r\nimport NewResultsForm from './NewResultsForm';\r\nimport RankedCurrenciesTable from './RankedCurrenciesTable';\r\nimport './App.css';\r\n\r\nimport LogoBox from './LogoBox.js'\r\nimport TextBox from './TextBox.js'\r\nimport Slider from './Slider.js'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n    <div className=\"App\">\r\n\r\n<div className =\"TopTable\">\r\n      <TextBox></TextBox>\r\n      <LogoBox></LogoBox>\r\n      <h5 align=\"center\"> The place to find optimal yield for your cryptocurrency portfolio </h5>\r\n    </div>   \r\n    <div className =\"ui container\"><h3> Best cryptocurrencies to provide liquidity on are: </h3> </div>\r\n    <RankedCurrenciesTable />\r\n        <div className =\"MiddleDivider\"> </div>\r\n        <div className =\"App3\"> </div>\r\n        <div className =\"ui container\"><h3>Optimal portfolio is:</h3></div>\r\n        <ConnectedResultsTable />\r\n        <NewResultsForm />\r\n        <Slider />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n<div className =\"Table1Header\"><h3> Best cryptocurrencies to provide liquidity on are: </h3> </div>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}