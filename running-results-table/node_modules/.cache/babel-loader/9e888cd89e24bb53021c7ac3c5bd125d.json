{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Go\\\\src\\\\pusher\\\\defi_aggregator\\\\running-results-table\\\\ui\\\\src\\\\SliderNew.js\";\nimport React from 'react';\nimport { Form, Header, Segment, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst sliderThumbStyles = props => `\n  width: 25px;\n  height: 25px;\n  background: ${props.color};\n  cursor: pointer;\n  outline: 5px solid #333;\n  opacity: ${props.opacity};\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n`;\n\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n  color: #888;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  .value {\n    flex: 1;\n    font-size: 2rem;\n  }\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 100%;\n    height: 15px;\n    border-radius: 5px;\n    background: #efefef;\n    outline: none;\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      ${props => sliderThumbStyles(props)}\n    }\n    &::-moz-range-thumb {\n      ${props => sliderThumbStyles(props)}\n    }\n  }\n`;\nexport default class Slider2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      risk_setting: ''\n    };\n    this.onChangeTime = this._onChangeTime.bind(this);\n\n    this.handleOnChange = e => this.setState({\n      value: e.target.value\n    });\n\n    this.onSubmit = this._onSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        vertical: true,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Risk setting\",\n              value: this.state.risk_setting,\n              onChange: this.onChangeTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n  /*\r\n    <Styles opacity={this.state.risk_setting > 10 ? (this.state.risk_setting / 255) : .1} color={this.props.color}>\r\n      <input type=\"range\" min={0} max={255} value={this.state.risk_setting} className=\"slider\" onChange={this.handleOnChange} />\r\n      <div className=\"value\">{this.state.risk_setting}</div>\r\n    </Styles>\r\n  */\n\n\n  _onChangeTime(e) {\n    this.setState({\n      risk_setting: e.target.value\n    });\n  }\n\n  _onSubmit() {\n    const payload = {\n      risk_setting: parseFloat(this.state.risk_setting)\n    };\n    fetch('http://localhost:8080/results2', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    this.setState({\n      risk_setting: ''\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Go/src/pusher/defi_aggregator/running-results-table/ui/src/SliderNew.js"],"names":["React","Form","Header","Segment","Button","styled","sliderThumbStyles","props","color","opacity","Styles","div","Slider2","Component","state","risk_setting","onChangeTime","_onChangeTime","bind","handleOnChange","e","setState","value","target","onSubmit","_onSubmit","render","payload","parseFloat","fetch","method","headers","body","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAa;AACvC;AACA;AACA,gBAAgBA,KAAK,CAACC,KAAM;AAC5B;AACA;AACA,aAAaD,KAAK,CAACE,OAAQ;AAC3B;AACA;AACA,CATA;;AAWA,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQJ,KAAK,IAAID,iBAAiB,CAACC,KAAD,CAAQ;AAC1C;AACA;AACA,QAAQA,KAAK,IAAID,iBAAiB,CAACC,KAAD,CAAQ;AAC1C;AACA;AACA,CA3BA;AA8BA,eAAe,MAAMK,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACJC,MAAAA,YAAY,EAAE;AADV,KADyC;AAAA,SAKjDC,YALiD,GAKlC,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CALkC;;AAAA,SAOjDC,cAPiD,GAO/BC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AAAlB,KAAd,CAPyB;;AAAA,SASjDE,QATiD,GAStC,KAAKC,SAAL,CAAeP,IAAf,CAAoB,IAApB,CATsC;AAAA;;AAWjDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,QAAQ,MAAjB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKF,QAArB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA,mCACI;AAAO,cAAA,WAAW,EAAC,cAAnB;AAAkC,cAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,YAApD;AAAkE,cAAA,QAAQ,EAAE,KAAKC;AAAjF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AAEIC,EAAAA,aAAa,CAACG,CAAD,EAAI;AACb,SAAKC,QAAL,CAAc;AACZN,MAAAA,YAAY,EAAEK,CAAC,CAACG,MAAF,CAASD;AADX,KAAd;AAGH;;AAEDG,EAAAA,SAAS,GAAG;AACR,UAAME,OAAO,GAAG;AACZZ,MAAAA,YAAY,EAAEa,UAAU,CAAC,KAAKd,KAAL,CAAWC,YAAZ;AADZ,KAAhB;AAGAc,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAL8B,KAAnC,CAAL;AAOA,SAAKN,QAAL,CAAc;AACZN,MAAAA,YAAY,EAAE;AADF,KAAd;AAGH;;AAtDgD","sourcesContent":["import React from 'react';\r\nimport { Form, Header, Segment, Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components';\r\n\r\nconst sliderThumbStyles = (props) => (`\r\n  width: 25px;\r\n  height: 25px;\r\n  background: ${props.color};\r\n  cursor: pointer;\r\n  outline: 5px solid #333;\r\n  opacity: ${props.opacity};\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n`);\r\n\r\nconst Styles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #888;\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  .value {\r\n    flex: 1;\r\n    font-size: 2rem;\r\n  }\r\n  .slider {\r\n    flex: 6;\r\n    -webkit-appearance: none;\r\n    width: 100%;\r\n    height: 15px;\r\n    border-radius: 5px;\r\n    background: #efefef;\r\n    outline: none;\r\n    &::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      appearance: none;\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n    &::-moz-range-thumb {\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport default class Slider2 extends React.Component {\r\n    state = {\r\n        risk_setting: ''\r\n    };\r\n    \r\n    onChangeTime = this._onChangeTime.bind(this);\r\n    \r\n    handleOnChange = (e) => this.setState({ value: e.target.value })\r\n\r\n    onSubmit = this._onSubmit.bind(this);\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Segment vertical>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <Form.Field>\r\n                            <input placeholder='Risk setting' value={this.state.risk_setting} onChange={this.onChangeTime} />\r\n                        </Form.Field>\r\n\r\n                        <Button type='submit'>Submit</Button>\r\n                    </Form>\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n      <Styles opacity={this.state.risk_setting > 10 ? (this.state.risk_setting / 255) : .1} color={this.props.color}>\r\n        <input type=\"range\" min={0} max={255} value={this.state.risk_setting} className=\"slider\" onChange={this.handleOnChange} />\r\n        <div className=\"value\">{this.state.risk_setting}</div>\r\n      </Styles>\r\n    */\r\n\r\n    _onChangeTime(e) {\r\n        this.setState({\r\n          risk_setting: e.target.value\r\n        });\r\n    }\r\n\r\n    _onSubmit() {\r\n        const payload = {\r\n            risk_setting: parseFloat(this.state.risk_setting)\r\n        };\r\n        fetch('http://localhost:8080/results2', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        });\r\n        this.setState({\r\n          risk_setting: ''\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}