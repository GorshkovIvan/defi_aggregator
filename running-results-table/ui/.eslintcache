[{"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\index.js":"1","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\reportWebVitals.js":"2","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\App.js":"3","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\NewResultsForm.js":"4","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\ConnectedResultsTable.js":"5","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\RankedCurrenciesTable.js":"6","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\ResultsTable.js":"7","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\ResultsTable2.js":"8","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\LogoBox.js":"9","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\TextBox.js":"10","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\Slider.js":"11"},{"size":540,"mtime":1614585935461,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1613807584000,"results":"14","hashOfConfig":"13"},{"size":1209,"mtime":1615101812510,"results":"15","hashOfConfig":"13"},{"size":3041,"mtime":1615035428598,"results":"16","hashOfConfig":"13"},{"size":791,"mtime":1613807584000,"results":"17","hashOfConfig":"13"},{"size":827,"mtime":1613807584000,"results":"18","hashOfConfig":"13"},{"size":2013,"mtime":1615033227306,"results":"19","hashOfConfig":"13"},{"size":2375,"mtime":1615029060737,"results":"20","hashOfConfig":"13"},{"size":368,"mtime":1615029676490,"results":"21","hashOfConfig":"13"},{"size":339,"mtime":1614585935453,"results":"22","hashOfConfig":"13"},{"size":3167,"mtime":1615101812515,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nkmstj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\index.js",[],["51","52"],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\reportWebVitals.js",[],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\App.js",["53"],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\NewResultsForm.js",[],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\ConnectedResultsTable.js",[],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\RankedCurrenciesTable.js",[],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\ResultsTable.js",["54"],"import React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react'\nexport default function ResultsTable({results}) {\n    const rows = results.map(((result, index) => {\n        let color;\n        if (index === 0) {\n            color='yellow';\n        } else if (index === 1) {\n            color='grey';\n        } else if (index === 2) {\n            color='orange';\n        }\n        return (\n            <Table.Row key={ index }>\n                <Table.Cell>\n                    <Label ribbon color={color}>{ index + 1 }</Label>\n                </Table.Cell>\n                <Table.Cell>{ result.tokenorpair }</Table.Cell>\n                <Table.Cell>{ result.pool}</Table.Cell>\n                <Table.Cell>{ result.amount }</Table.Cell>\n                <Table.Cell>{ result.percentageofportfolio }</Table.Cell>\n                <Table.Cell>{ result.roi_estimate }</Table.Cell>\n                <Table.Cell>{ result.risk_setting }</Table.Cell>\n            </Table.Row>\n        );\n    }));\n    return (\n        <div className=\"ui container\">\n            <Segment>\n\n                <Table striped>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Ranking</Table.HeaderCell>\n                            <Table.HeaderCell>Token/Pair</Table.HeaderCell>\n                            <Table.HeaderCell>Pool</Table.HeaderCell>\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\n                            <Table.HeaderCell>% Portfolio</Table.HeaderCell>\n                            <Table.HeaderCell>ROI Estimate</Table.HeaderCell>\n                            <Table.HeaderCell>Risk setting</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        { rows }\n                    </Table.Body>\n                </Table>\n            </Segment>\n        </div>\n    );\n}\n\n//                 <Header>Optimal Portfolio</Header>",["55","56"],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\ResultsTable2.js",["57"],"import React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react'\n\nexport default function ResultsTable2({currencyoutputtable}) {\n    const rows = currencyoutputtable.map(((result, index) => {\n        let color = 'blue';\n\n        return (\n            <Table.Row key={ index }>\n                <Table.Cell>\n                    <Label ribbon color={color}>{ index + 1 }</Label>\n                </Table.Cell>\n                <Table.Cell>{ result.backend_pair }</Table.Cell>\n                <Table.Cell>{ result.backend_poolsize }</Table.Cell>\n                <Table.Cell>{ result.backend_volume }</Table.Cell>\n                <Table.Cell>{ result.backend_yield }</Table.Cell>\n                <Table.Cell>{ result.pool_source }</Table.Cell>\n                <Table.Cell>{ result.volatility }</Table.Cell>\n                <Table.Cell>{ result.ROIestimate }</Table.Cell>\n            </Table.Row>\n        );\n    }));\n    return (\n        <div className=\"ui container\">\n            <Segment>\n\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Ranking</Table.HeaderCell>\n                            <Table.HeaderCell>Currency Pair</Table.HeaderCell>\n                            <Table.HeaderCell>Pool Size</Table.HeaderCell>\n                            <Table.HeaderCell>Pool Trading Volume</Table.HeaderCell>\n                            <Table.HeaderCell>Interest Rate</Table.HeaderCell>\n                            <Table.HeaderCell>Pool</Table.HeaderCell>\n                            <Table.HeaderCell>Historical Volatility</Table.HeaderCell>\n                            <Table.HeaderCell>ROI Estimate</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        { rows }\n                    </Table.Body>\n                </Table>\n            </Segment>\n        </div>\n    );\n}\n\n\n       /*\n        if (index === 0) {\n            color='blue';\n        } else if (index === 1) {\n            color='blue';\n        } else if (index === 2) {\n            color='blue';\n        }\n\n             <Table.Cell>{ result.max_amount }</Table.Cell>\n                <Table.Cell>{ result.raw_yield }</Table.Cell>\n                <Table.Cell>{ result.normalized_yield }</Table.Cell>\n\n        */","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\LogoBox.js",["58"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport logo from './eth.png';\r\n\r\nclass LogoBox extends React.Component {\r\n    render() {\r\n      return <div className=\"Applogo\"> <img src={logo} width=\"2%\"/> </div>;\r\n    }\r\n  }\r\n\r\n  ReactDOM.render(<LogoBox />, document.getElementById('root') || document.createElement('div'));\r\n  export default LogoBox;","C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\TextBox.js",[],"C:\\Go\\src\\pusher\\defi_aggregator\\running-results-table\\ui\\src\\Slider.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":23},{"ruleId":"60","replacedBy":"69"},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","severity":1,"message":"68","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":7,"column":40,"nodeType":"73","endLine":7,"endColumn":68},{"ruleId":"64","severity":1,"message":"74","line":2,"column":24,"nodeType":"66","messageId":"67","endLine":2,"endColumn":31},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.",["75"],["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Segment' is defined but never used.","no-global-assign","no-unsafe-negation"]