{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Go\\\\src\\\\pusher\\\\defi_aggregator\\\\running-results-table\\\\ui\\\\src\\\\toggle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { setTheme } from './themes';\nimport { Button } from 'semantic-ui-react';\nimport './App.css';\n\nfunction Toggle() {\n  _s();\n\n  const [togClass, setTogClass] = useState('dark');\n  let theme = localStorage.getItem('theme');\n\n  const handleOnClick = () => {\n    if (localStorage.getItem('theme') === 'theme-dark') {\n      setTheme('theme-light');\n      setTogClass('light');\n    } else {\n      setTheme('theme-dark');\n      setTogClass('dark');\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('theme') === 'theme-dark') {\n      setTogClass('dark');\n    } else if (localStorage.getItem('theme') === 'theme-light') {\n      setTogClass('light');\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--toggle\",\n      children: [togClass === \"light\" ? /*#__PURE__*/_jsxDEV(Button, {\n        id: \"toggle\",\n        className: \"toggle--checkbox\",\n        onClick: handleOnClick,\n        children: \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        id: \"toggle\",\n        className: \"toggle--checkbox\",\n        onClick: handleOnClick,\n        children: \"Light Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toggle\",\n        className: \"toggle--label\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle--label-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Toggle, \"gF9BYQF2DF6cTK60PRMZwt5SoRo=\");\n\n_c = Toggle;\nexport default Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["C:/Go/src/pusher/defi_aggregator/running-results-table/ui/src/toggle.js"],"names":["React","useEffect","useState","setTheme","Button","Toggle","togClass","setTogClass","theme","localStorage","getItem","handleOnClick"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,MAAD,CAAxC;AACA,MAAIM,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIF,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,YAAtC,EAAoD;AAChDP,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACAI,MAAAA,WAAW,CAAC,OAAD,CAAX;AACH,KAHD,MAGO;AACHJ,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACAI,MAAAA,WAAW,CAAC,MAAD,CAAX;AACH;AACJ,GARD;;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,YAAtC,EAAoD;AAChDH,MAAAA,WAAW,CAAC,MAAD,CAAX;AACH,KAFD,MAEO,IAAIE,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,aAAtC,EAAqD;AACxDH,MAAAA,WAAW,CAAC,OAAD,CAAX;AACH;AACJ,GANQ,EAMN,CAACC,KAAD,CANM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBAEQF,QAAQ,KAAK,OAAb,gBACA,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC,kBAA9B;AAAiD,QAAA,OAAO,EAAEK,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC,kBAA9B;AAAiD,QAAA,OAAO,EAAEA,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALR,eAOI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,SAAS,EAAC,eAAlC;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GArCQN,M;;KAAAA,M;AAuCT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { setTheme } from './themes';\r\nimport { Button } from 'semantic-ui-react';\r\nimport './App.css';\r\n\r\nfunction Toggle() {\r\n    const [togClass, setTogClass] = useState('dark');\r\n    let theme = localStorage.getItem('theme');\r\n\r\n    const handleOnClick = () => {\r\n        if (localStorage.getItem('theme') === 'theme-dark') {\r\n            setTheme('theme-light');\r\n            setTogClass('light')\r\n        } else {\r\n            setTheme('theme-dark');\r\n            setTogClass('dark')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('theme') === 'theme-dark') {\r\n            setTogClass('dark')\r\n        } else if (localStorage.getItem('theme') === 'theme-light') {\r\n            setTogClass('light')\r\n        }\r\n    }, [theme])\r\n\r\n    return (\r\n        <div className=\"ui container\">\r\n            <div className=\"container--toggle\">\r\n                {\r\n                    togClass === \"light\" ?\r\n                    <Button id=\"toggle\" className=\"toggle--checkbox\" onClick={handleOnClick}>Dark Mode</Button>\r\n                    :\r\n                    <Button id=\"toggle\" className=\"toggle--checkbox\" onClick={handleOnClick}>Light Mode</Button>\r\n                }\r\n                <label htmlFor=\"toggle\" className=\"toggle--label\">\r\n                    <span className=\"toggle--label-background\"></span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggle;\r\n"]},"metadata":{},"sourceType":"module"}