{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Go\\\\src\\\\pusher\\\\defi_aggregator\\\\running-results-table\\\\ui\\\\src\\\\ResultsTable2.js\";\nimport React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react';\nexport default function ResultsTable2({\n  currencyinputtable\n}) {\n  const rows = currencyinputtable.map((result, index) => {\n    let color = 'blue';\n    return /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          ribbon: true,\n          color: color,\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Best-yielding cryptocurrency pairs are: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Ranking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Currency Pair\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Yield raw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Yield normalized by vol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n/*\r\n if (index === 0) {\r\n     color='blue';\r\n } else if (index === 1) {\r\n     color='blue';\r\n } else if (index === 2) {\r\n     color='blue';\r\n }\r\n        <Table.Cell>{ result.max_amount }</Table.Cell>\r\n         <Table.Cell>{ result.raw_yield }</Table.Cell>\r\n         <Table.Cell>{ result.normalized_yield }</Table.Cell>\r\n   */\n\n_c = ResultsTable2;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsTable2\");","map":{"version":3,"sources":["C:/Go/src/pusher/defi_aggregator/running-results-table/ui/src/ResultsTable2.js"],"names":["React","Table","Header","Segment","Label","ResultsTable2","currencyinputtable","rows","map","result","index","color","pair"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,KAAjC,QAA8C,mBAA9C;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAA6C;AACxD,QAAMC,IAAI,GAAGD,kBAAkB,CAACE,GAAnB,CAAwB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpD,QAAIC,KAAK,GAAG,MAAZ;AAEA,wBACI,QAAC,KAAD,CAAO,GAAP;AAAA,8BACI,QAAC,KAAD,CAAO,IAAP;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,MAAM,MAAb;AAAc,UAAA,KAAK,EAAEA,KAArB;AAAA,oBAA8BD,KAAK,GAAG;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAcD,MAAM,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAiBF,KAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAZY,CAAb;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI,QAAC,OAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAA,gCACI,QAAC,KAAD,CAAO,MAAP;AAAA,iCACI,QAAC,KAAD,CAAO,GAAP;AAAA,oCACI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,KAAD,CAAO,IAAP;AAAA,oBACMH;AADN;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;AAGM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAjDwBF,a","sourcesContent":["import React from 'react';\r\nimport { Table, Header, Segment, Label } from 'semantic-ui-react'\r\n\r\nexport default function ResultsTable2({currencyinputtable}) {\r\n    const rows = currencyinputtable.map(((result, index) => {\r\n        let color = 'blue';\r\n\r\n        return (\r\n            <Table.Row key={ index }>\r\n                <Table.Cell>\r\n                    <Label ribbon color={color}>{ index + 1 }</Label>\r\n                </Table.Cell>\r\n                <Table.Cell>{ result.pair }</Table.Cell>\r\n   \r\n            </Table.Row>\r\n        );\r\n    }));\r\n    return (\r\n        <div className=\"ui container\">\r\n            <Segment>\r\n                <Header>Best-yielding cryptocurrency pairs are: </Header>\r\n                <Table>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Ranking</Table.HeaderCell>\r\n                            <Table.HeaderCell>Currency Pair</Table.HeaderCell>\r\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                            <Table.HeaderCell>Yield raw</Table.HeaderCell>\r\n                            <Table.HeaderCell>Yield normalized by vol</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        { rows }\r\n                    </Table.Body>\r\n                </Table>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n       /*\r\n        if (index === 0) {\r\n            color='blue';\r\n        } else if (index === 1) {\r\n            color='blue';\r\n        } else if (index === 2) {\r\n            color='blue';\r\n        }\r\n\r\n             <Table.Cell>{ result.max_amount }</Table.Cell>\r\n                <Table.Cell>{ result.raw_yield }</Table.Cell>\r\n                <Table.Cell>{ result.normalized_yield }</Table.Cell>\r\n\r\n        */"]},"metadata":{},"sourceType":"module"}