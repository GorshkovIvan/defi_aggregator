{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Go\\\\src\\\\pusher\\\\defi_aggregator\\\\running-results-table\\\\ui\\\\src\\\\ResultsTable.js\";\nimport React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react';\nexport default function ResultsTable({\n  results\n}) {\n  const rows = results.map((result, index) => {\n    let color;\n\n    if (index === 0) {\n      color = 'yellow';\n    } else if (index === 1) {\n      color = 'grey';\n    } else if (index === 2) {\n      color = 'orange';\n    }\n\n    return /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          ribbon: true,\n          color: color,\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.tokenorpair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.pool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.percentageofportfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.roi_estimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.risk_setting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Ranking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Token/Pair\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Pool\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"% Portfolio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"ROI Estimate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Risk setting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n} //                 <Header>Optimal Portfolio</Header>\n\n_c = ResultsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"sources":["C:/Go/src/pusher/defi_aggregator/running-results-table/ui/src/ResultsTable.js"],"names":["React","Table","Header","Segment","Label","ResultsTable","results","rows","map","result","index","color","tokenorpair","pool","amount","percentageofportfolio","roi_estimate","risk_setting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table, Header, Segment, Label } from 'semantic-ui-react'\r\nexport default function ResultsTable({results}) {\r\n    const rows = results.map(((result, index) => {\r\n        let color;\r\n        if (index === 0) {\r\n            color='yellow';\r\n        } else if (index === 1) {\r\n            color='grey';\r\n        } else if (index === 2) {\r\n            color='orange';\r\n        }\r\n        return (\r\n            <Table.Row key={ index }>\r\n                <Table.Cell>\r\n                    <Label ribbon color={color}>{ index + 1 }</Label>\r\n                </Table.Cell>\r\n                <Table.Cell>{ result.tokenorpair }</Table.Cell>\r\n                <Table.Cell>{ result.pool}</Table.Cell>\r\n                <Table.Cell>{ result.amount }</Table.Cell>\r\n                <Table.Cell>{ result.percentageofportfolio }</Table.Cell>\r\n                <Table.Cell>{ result.roi_estimate }</Table.Cell>\r\n                <Table.Cell>{ result.risk_setting }</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }));\r\n    return (\r\n        <div className=\"ui container\">\r\n            <Segment>\r\n\r\n                <Table striped>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Ranking</Table.HeaderCell>\r\n                            <Table.HeaderCell>Token/Pair</Table.HeaderCell>\r\n                            <Table.HeaderCell>Pool</Table.HeaderCell>\r\n                            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                            <Table.HeaderCell>% Portfolio</Table.HeaderCell>\r\n                            <Table.HeaderCell>ROI Estimate</Table.HeaderCell>\r\n                            <Table.HeaderCell>Risk setting</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        { rows }\r\n                    </Table.Body>\r\n                </Table>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\n//                 <Header>Optimal Portfolio</Header>"]},"metadata":{},"sourceType":"module"}