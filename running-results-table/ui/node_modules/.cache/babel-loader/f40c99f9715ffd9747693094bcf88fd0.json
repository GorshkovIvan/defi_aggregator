{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Go\\\\src\\\\pusher\\\\defi_aggregator\\\\running-results-table\\\\ui\\\\src\\\\ResultsTable.js\";\nimport React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react';\nexport default function ResultsTable({\n  results\n}) {\n  const rows = results.map((result, index) => {\n    let color;\n\n    if (index === 0) {\n      color = 'yellow';\n    } else if (index === 1) {\n      color = 'grey';\n    } else if (index === 2) {\n      color = 'orange';\n    }\n\n    return /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          ribbon: true,\n          color: color,\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: result.pool_sz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Pool Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"sources":["C:/Go/src/pusher/defi_aggregator/running-results-table/ui/src/ResultsTable.js"],"names":["React","Table","Header","Segment","Label","ResultsTable","results","rows","map","result","index","color","pair","time","pool_sz"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,KAAjC,QAA8C,mBAA9C;AACA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AAC5C,QAAMC,IAAI,GAAGD,OAAO,CAACE,GAAR,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzC,QAAIC,KAAJ;;AACA,QAAID,KAAK,KAAK,CAAd,EAAiB;AACbC,MAAAA,KAAK,GAAC,QAAN;AACH,KAFD,MAEO,IAAID,KAAK,KAAK,CAAd,EAAiB;AACpBC,MAAAA,KAAK,GAAC,MAAN;AACH,KAFM,MAEA,IAAID,KAAK,KAAK,CAAd,EAAiB;AACpBC,MAAAA,KAAK,GAAC,QAAN;AACH;;AACD,wBACI,QAAC,KAAD,CAAO,GAAP;AAAA,8BACI,QAAC,KAAD,CAAO,IAAP;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,MAAM,MAAb;AAAc,UAAA,KAAK,EAAEA,KAArB;AAAA,oBAA8BD,KAAK,GAAG;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAcD,MAAM,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAcH,MAAM,CAACI;AAArB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAcJ,MAAM,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,OAAiBJ,KAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAnBY,CAAb;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI,QAAC,OAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAA,gCACI,QAAC,KAAD,CAAO,MAAP;AAAA,iCACI,QAAC,KAAD,CAAO,GAAP;AAAA,oCACI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,KAAD,CAAO,IAAP;AAAA,oBACMH;AADN;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;KAzCuBF,Y","sourcesContent":["import React from 'react';\nimport { Table, Header, Segment, Label } from 'semantic-ui-react'\nexport default function ResultsTable({results}) {\n    const rows = results.map(((result, index) => {\n        let color;\n        if (index === 0) {\n            color='yellow';\n        } else if (index === 1) {\n            color='grey';\n        } else if (index === 2) {\n            color='orange';\n        }\n        return (\n            <Table.Row key={ index }>\n                <Table.Cell>\n                    <Label ribbon color={color}>{ index + 1 }</Label>\n                </Table.Cell>\n                <Table.Cell>{ result.pair }</Table.Cell>\n                <Table.Cell>{ result.time }</Table.Cell>\n                <Table.Cell>{ result.pool_sz }</Table.Cell>\n            </Table.Row>\n        );\n    }));\n    return (\n        <div className=\"ui container\">\n            <Segment>\n                <Header>Results</Header>\n                <Table striped>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Position</Table.HeaderCell>\n                            <Table.HeaderCell>Name</Table.HeaderCell>\n                            <Table.HeaderCell>Time</Table.HeaderCell>\n                            <Table.HeaderCell>Pool Size</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        { rows }\n                    </Table.Body>\n                </Table>\n            </Segment>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}